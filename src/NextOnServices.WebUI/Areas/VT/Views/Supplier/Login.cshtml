@using NextOnServices
@namespace NextOnServices.WebUI.Views
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, NextonServices

@model NextOnServices.Infrastructure.Models.Supplier.SupplierLoginDTO
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>VT Login</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="~/theme/images/favicon.png" />
    <meta name="robots" content="noindex, follow">

    <!-- External libraries used by the new design -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>

    <!-- Keep jQuery and Bootstrap from your old file (validation/back-end relies on these if used) -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"
            integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.2/umd/popper.min.js"
            integrity="sha512-2rNj2KJ+D8s1ceNasTIex6z4HWyOnEYLVC3FigGOmyQCZc2eBXKgOxQmo3oKLHyfcj53uz4QMsRCWNbLd32Q1g=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>

    <!-- Optional: select2 if your project needs it elsewhere -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <!-- Small inline styles to match the provided modern 3D design -->
    <style>
        :root {
            --panel-bg: rgba(255,255,255,0.04);
            --panel-border: rgba(255,255,255,0.10);
            --accent: #00ffff;
        }

        html, body {
            height: 100%;
            margin: 0;
            font-family: 'Inter', sans-serif;
            background: #0a0a0a;
            color: #fff;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        #container {
            position: relative;
            width: 100vw;
            height: 100vh;
            overflow: hidden;
        }

        /* three.js canvas */
        #three-canvas {
            position: absolute;
            inset: 0;
            width: 100%;
            height: 100%;
            display: block;
            z-index: 1;
        }

        /* overlay that contains the form */
        .login-overlay {
            position: absolute;
            inset: 0;
            z-index: 2;
            display: flex;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(8px);
        }

        .login-panel {
            width: 340px;
            max-width: 92%;
            background: var(--panel-bg);
            border: 1px solid var(--panel-border);
            border-radius: 18px;
            padding: 36px;
            text-align: center;
            box-shadow: 0 8px 32px rgba(0,0,0,0.6);
            transform: perspective(1000px) rotateY(0deg);
            transition: transform .25s ease;
        }

            .login-panel:hover {
                transform: perspective(1000px) rotateY(4deg);
            }

        .logo {
            font-size: 1.6rem;
            color: #232727; margin-bottom: 18px;
            text-shadow: 0 0 8px rgba(0,255,255,0.12);
            font-weight: 600;
          
        }

        .login-panel form {
            margin-top: 6px;
        }

        .form-control.vt-input {
            width: 100%;
            padding: 12px 14px;
            margin: 10px 0;
            border-radius: 10px;
            border: 1px solid rgba(0,255,255,0.12);
            background: rgba(0,0,0,0.45);
            color: #fff;
            font-size: 0.95rem;
        }

            .form-control.vt-input:focus {
                outline: none;
                border-color: var(--accent);
                box-shadow: 0 0 16px rgba(0,255,255,0.12);
                animation: glow 1s ease-in-out alternate;
            }

        @@keyframes glow {
            from

        {
            box-shadow: 0 0 10px rgba(0,255,255,0.10);
        }

        to {
            box-shadow: 0 0 20px rgba(0,255,255,0.18);
        }

        }

        .login-btn {
            width: 100%;
            padding: 12px;
            margin-top: 14px;
            border-radius: 10px;
            border: none;
            font-weight: 700;
            cursor: pointer;
            background: linear-gradient(45deg, #00ffff, #ffd700);
            color: #000;
            transition: transform .15s ease;
        }

            .login-btn:hover {
                transform: scale(1.03) translateZ(6px);
            }

        .footer {
            margin-top: 12px;
            font-size: 0.85rem;
            color: rgba(255,255,255,0.65);
        }

        /* keep original validation style for compatibility */
        .text-danger {
            color: red;
            margin-top: 8px;
            font-size: 0.9rem;
        }

            .text-danger ul {
                list-style: none;
                font-size: 13px;
                padding-left: 0;
                margin: 0;
            }

        /* smaller screens */
        @@media (max-width: 480px) {
            .login-panel

        {
            padding: 20px;
            width: 92%;
        }

        .logo {
            font-size: 1.3rem;
        }

        }

        #container > .brand-logo {
            position: fixed; /* pins to viewport */
            top: 16px;
            left: 16px;
            width: 190px;
            z-index: 2147483647; /* maxes out stacking */
            background: transparent !important;
            display: block;
        }

    </style>
</head>
<!-- Hidden SVG filters: remove white background from images -->
<svg width="0" height="0" style="position:absolute; left:-9999px; top:-9999px; overflow:hidden;" aria-hidden="true" focusable="false">
    <filter id="knockoutWhite" color-interpolation-filters="sRGB">
        <!-- Set alpha = 3A - R - G - B  => pure white becomes alpha 0 -->
        <feColorMatrix type="matrix" values="
      1 0 0 0 0
      0 1 0 0 0
      0 0 1 0 0
     -1 -1 -1 3 0" />
    </filter>

    <!-- Softer version: remove near-white and soften edges -->
    <filter id="knockoutWhiteSoft" color-interpolation-filters="sRGB">
        <feColorMatrix type="matrix" values="
      1 0 0 0 0
      0 1 0 0 0
      0 0 1 0 0
     -1 -1 -1 3 0" result="alphaFix" />
        <!-- Slight blur to avoid jagged halo -->
        <feGaussianBlur in="alphaFix" stdDeviation="0.4" result="blurred" />
        <feComponentTransfer>
            <!-- Raise threshold a bit: tweak slope/intercept to include off-white (#f7f7f7, etc.) -->
            <feFuncA type="linear" slope="1.15" intercept="-0.08" />
        </feComponentTransfer>
    </filter>
</svg>

<body>
    <div id="container">
        <!-- 3D Canvas -->
        <canvas id="three-canvas" aria-hidden="true"></canvas>
       

        <img src="/LoginRoot/NextonLogo.png"
             alt="NextOnBusinesses"
             style="
       position:fixed; top:16px; left:16px; width:190px;
       z-index:2147483647; pointer-events:none;
       filter:url(#knockoutWhiteSoft);
     ">



        <!-- Overlay Login Form (server-posting form preserved) -->
        <div class="login-overlay" role="main">
            <div class="login-panel" aria-labelledby="loginTitle">
                <div id="loginTitle" class="logo">NextON Businesses</div>

                <!-- Keep the same form action/method so server receives same request as old view -->
                <form class="login100-form validate-form" method="post" action="/VT/Supplier/Login" id="login-form" novalidate>
                    <div>
                        <input asp-for="UserName" class="form-control vt-input" placeholder="Username" aria-label="Username" />
                        <span class="text-danger">@Html.ValidationMessageFor(m => m.UserName)</span>
                    </div>

                    <div>
                        <input asp-for="Password" class="form-control vt-input" placeholder="Password" type="password" aria-label="Password" />
                        <span class="text-danger">@Html.ValidationMessageFor(m => m.Password)</span>
                    </div>

                    <div style="display:flex; align-items:center; gap:8px; justify-content:flex-start; margin-top:6px;">
                        <input class="form-check-input" id="ckb1" type="checkbox" name="remember-me" style="width:16px;height:16px;" />
                        <label for="ckb1" style="color:rgba(255,255,255,0.85); font-size:0.95rem; cursor:pointer;">Remember me</label>
                    </div>

                    <div class="container-login100-form-btn" style="margin-top:14px;">
                        <button type="submit" class="login-btn">Login</button>
                    </div>

                    <!-- keep the validation summary (same CSS class as original) -->
                    @Html.ValidationSummary("", new { @class = "text-danger" })

                    <div class="text-center w-full" style="padding-top:18px;">
                        <span class="txt1" style="color:rgba(255,255,255,0.85);">Forget Password?</span>
                        <a class="txt1 bo1 hov1" href="/VT/Supplier/ForgetPassword" style="color:var(--accent); margin-left:8px; text-decoration:none;">Click Here</a>
                    </div>
                </form>

                @* <p class="footer">Enhanced Security in 3D</p> *@
            </div>
        </div>
    </div>

    <!-- Optional main.js (if you have project-specific JS; preserved from old view) -->
    <script src="js/main.js"></script>

    <!-- Three.js scene + GSAP subtle animations (purely visual; form still posts normally to the server) -->
    <script>
        // Basic Three.js setup for a subtle premium orb background
        (function () {
            const canvas = document.getElementById('three-canvas');
            const renderer = new THREE.WebGLRenderer({ canvas: canvas, alpha: true, antialias: true });
            renderer.setPixelRatio(Math.min(window.devicePixelRatio || 1, 2));
            renderer.setSize(window.innerWidth, window.innerHeight);
            renderer.setClearColor(0x0a0a0a, 1);

            const scene = new THREE.Scene();
            const camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 1000);
            camera.position.z = 6;

            // Sphere + material to create premium glow
            const geometry = new THREE.SphereGeometry(2.2, 48, 48);
            const material = new THREE.MeshPhongMaterial({
                color: 0x00ffff,
                emissive: 0x002233,
                shininess: 120,
                transparent: true,
                opacity: 0.86,
            });
            const orb = new THREE.Mesh(geometry, material);
            scene.add(orb);

            // subtle particle shell (small points)
            const ptsGeo = new THREE.BufferGeometry();
            const count = 400;
            const positions = new Float32Array(count * 3);
            for (let i = 0; i < count; i++) {
                const phi = Math.acos(2 * Math.random() - 1);
                const theta = 2 * Math.PI * Math.random();
                const r = 2.6 + Math.random() * 0.4;
                positions[i * 3] = r * Math.sin(phi) * Math.cos(theta);
                positions[i * 3 + 1] = r * Math.sin(phi) * Math.sin(theta);
                positions[i * 3 + 2] = r * Math.cos(phi);
            }
            ptsGeo.setAttribute('position', new THREE.BufferAttribute(positions, 3));
            const ptsMaterial = new THREE.PointsMaterial({ size: 0.03, color: 0x00ffff, transparent: true, opacity: 0.7 });
            const points = new THREE.Points(ptsGeo, ptsMaterial);
            scene.add(points);

            // lighting
            const ambient = new THREE.AmbientLight(0x404040, 0.6);
            scene.add(ambient);
            const pointLight = new THREE.PointLight(0x00ffff, 1.2, 100);
            pointLight.position.set(5, 4, 6);
            scene.add(pointLight);

            // animation loop
            function animate() {
                requestAnimationFrame(animate);
                orb.rotation.y += 0.004;
                orb.rotation.x += 0.002;
                points.rotation.y -= 0.002;
                // pulse
                const s = 1 + Math.sin(Date.now() * 0.0015) * 0.07;
                orb.scale.setScalar(s);
                renderer.render(scene, camera);
            }
            animate();

            // resize handler
            window.addEventListener('resize', () => {
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(window.innerWidth, window.innerHeight);
            });
        })();

        // GSAP entrance animation for the panel (purely cosmetic)
        gsap.from('.login-panel', { duration: 0.9, y: 40, opacity: 0, ease: 'power3.out' });

        // NOTE:
        // We DO NOT intercept the form 'submit' event so the behavior stays exactly like your original view:
        // the browser will POST to /VT/Supplier/Login and server-side validation will run as before.
        // If you later want a graceful animation on submit and then programmatic submit, we can add that as an enhancement.
    </script>

    <!-- Google Analytics and Cloudflare beacon preserved (if you want them) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-23581568-13"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());
        gtag('config', 'UA-23581568-13');
    </script>
    <script defer src="https://static.cloudflareinsights.com/beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015"
            integrity="sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ=="
            data-cf-beacon='{"rayId":"8e131177a89d47ef","serverTiming":{"name":{"cfExtPri":true,"cfL4":true,"cfSpeedBrain":true,"cfCacheStatus":true}},"version":"2024.10.5","token":"cd0b4b3a733644fc843ef0b185f98241"}'
            crossorigin="anonymous"></script>
</body>
</html>
