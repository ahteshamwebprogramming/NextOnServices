@model NextOnServices.VT.Infrastructure.ViewModels.Supplier.SupplierViewModel
@using NextOnServices.Infrastructure.Models.Supplier

@{ 
    ViewData["Title"] = "Supplier Preview";
    Layout = "~/Areas/VT/Views/Shared/_Layout.cshtml";
    var supplier = Model?.Supplier ?? new SupplierDTO();
    var statusRedirects = new List<(string Label, string Url)>();
    var statusIconClasses = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase)
    {
        ["Completes"] = "fas fa-check",
        ["Terminate"] = "fas fa-times",
        ["Quota Full"] = "fas fa-exclamation-triangle",
        ["Screened"] = "fas fa-filter",
        ["Over Quota"] = "fas fa-tachometer-alt",
        ["Over Quota (Alt)"] = "fas fa-tachometer-alt",
        ["Incomplete"] = "fas fa-hourglass-half",
        ["Security Termination"] = "fas fa-shield-alt",
        ["Fraud"] = "fas fa-exclamation-circle",
        ["Success"] = "fas fa-check-circle",
        ["Default"] = "fas fa-star",
        ["Failure"] = "fas fa-times-circle",
        ["Quality Termination"] = "fas fa-ban"
    };

    if (!string.IsNullOrWhiteSpace(supplier.Completes))
    {
        statusRedirects.Add(("Completes", supplier.Completes!));
    }
    if (!string.IsNullOrWhiteSpace(supplier.Terminate))
    {
        statusRedirects.Add(("Terminate", supplier.Terminate!));
    }
    if (!string.IsNullOrWhiteSpace(supplier.Quotafull))
    {
        statusRedirects.Add(("Quota Full", supplier.Quotafull!));
    }
    if (!string.IsNullOrWhiteSpace(supplier.Screened))
    {
        statusRedirects.Add(("Screened", supplier.Screened!));
    }
    if (!string.IsNullOrWhiteSpace(supplier.Overquota))
    {
        statusRedirects.Add(("Over Quota", supplier.Overquota!));
    }
    if (!string.IsNullOrWhiteSpace(supplier.Incomplete))
    {
        statusRedirects.Add(("Incomplete", supplier.Incomplete!));
    }
    if (!string.IsNullOrWhiteSpace(supplier.Security))
    {
        statusRedirects.Add(("Security Termination", supplier.Security!));
    }
    if (!string.IsNullOrWhiteSpace(supplier.Fraud))
    {
        statusRedirects.Add(("Fraud", supplier.Fraud!));
    }
    if (!string.IsNullOrWhiteSpace(supplier.Success))
    {
        statusRedirects.Add(("Success", supplier.Success!));
    }
    if (!string.IsNullOrWhiteSpace(supplier.Default))
    {
        statusRedirects.Add(("Default", supplier.Default!));
    }
    if (!string.IsNullOrWhiteSpace(supplier.Failure))
    {
        statusRedirects.Add(("Failure", supplier.Failure!));
    }
    if (!string.IsNullOrWhiteSpace(supplier.QualityTermination))
    {
        statusRedirects.Add(("Quality Termination", supplier.QualityTermination!));
    }
    if (!string.IsNullOrWhiteSpace(supplier.OverQuota1))
    {
        statusRedirects.Add(("Over Quota (Alt)", supplier.OverQuota1!));
    }
}

<link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.dataTables.min.css">
<style>
    .supplier-section-title {
        font-weight: 600;
    }

    .supplier-info-card {
        border: 1px solid #e9ecef;
        border-radius: .75rem;
        padding: 1rem;
        background-color: #f8f9fa;
        height: 100%;
    }

    .supplier-info-card-title {
        font-size: 0.75rem;
        text-transform: uppercase;
        letter-spacing: .05em;
        color: #6c757d;
        display: flex;
        align-items: center;
        gap: .5rem;
        margin-bottom: .5rem;
    }

    .supplier-info-card-title .mdi {
        font-size: 1.25rem;
        color: var(--accent, #0d6efd);
    }

    .supplier-info-card-text {
        font-size: 1rem;
        font-weight: 500;
        margin-bottom: 0;
        overflow-wrap: anywhere;
    }

    .redirect-link {
        display: inline-flex;
        align-items: center;
        gap: .35rem;
        flex-wrap: wrap;
        color: var(--accent, #0d6efd);
    }

    .redirect-link:hover {
        text-decoration: none;
    }

    .redirect-link-text {
        overflow-wrap: anywhere;
    }

    .status-card-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .status-card-item {
        display: flex;
        align-items: flex-start;
        gap: .85rem;
        padding: .9rem 1rem;
        border-radius: .75rem;
        border: 1px solid #e9ecef;
        background-color: #f8f9fa;
        box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.6);
    }

    .status-card-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 2.75rem;
        height: 2.75rem;
        border-radius: .75rem;
        background: rgba(13, 110, 253, 0.12);
        color: #0d6efd;
        font-size: 1.1rem;
        flex-shrink: 0;
    }

    .status-card-content {
        flex: 1;
        min-width: 0;
    }

    .status-card-label {
        font-size: 0.75rem;
        letter-spacing: .05em;
        text-transform: uppercase;
        font-weight: 600;
        color: #6c757d;
        margin-bottom: .35rem;
    }

    .status-card-url {
        font-size: .95rem;
        font-weight: 500;
        color: #212529;
    }

    .status-card-url .mdi {
        font-size: .9rem;
    }

    .supplier-table th {
        font-size: 0.8rem;
        text-transform: uppercase;
        color: #6c757d;
    }

    .supplier-table td {
        font-size: 0.95rem;
    }
    .supplier-table thead th{color:#fff}

    .dt-buttons .dt-button {
        padding: .25rem .5rem;
        line-height: 1;
        background: transparent !important;
        border: none !important;
        box-shadow: none !important;
        padding: 0 !important;
        margin: 0 .4rem !important;
        line-height: 0 !important;
        cursor: pointer;
        border: 0 !important;
        outline: 0 !important;
        box-shadow: none !important;
        background: transparent !important;
    }

        .dt-buttons .dt-button img {
            height: 40px;
            width: auto;
            display: block;
        }
</style>

<div class="row mb-3 align-items-center">
    <div class="col-lg-8 col-md-7 col-sm-12">
        <h4 class="mb-1">Supplier Preview</h4>
        <p class="text-muted mb-0">@(!string.IsNullOrWhiteSpace(supplier.Name) ? supplier.Name : "Supplier overview")</p>
    </div>
    <div class="col-lg-4 col-md-5 col-sm-12 text-md-end text-sm-start mt-3 mt-md-0">
        <a href="@Url.Action("SupplierList", "Supplier", new { area = "VT" })" class="btn btn-outline-primary btn-sm me-2">Back to Supplier List</a>
        @if (!string.IsNullOrWhiteSpace(supplier.encId))
        {
            <a href="@Url.Action("AddSupplier", "Supplier", new { area = "VT", eSupplierId = supplier.encId })" class="btn btn-primary btn-sm">Edit Supplier</a>
        }
    </div>
</div>

<div class="row">
    <div class="col-lg-6 grid-margin stretch-card">
        <div class="card h-100">
            <div class="card-body">
                <h5 class="card-title supplier-section-title mb-3">Supplier Details</h5>
                <div class="row g-3">
                    <div class="col-sm-6 col-xl-4">
                        <div class="supplier-info-card">
                            <div class="supplier-info-card-title">
                                <i class="mdi mdi-account-badge-outline"></i>
                                <span>Supplier Name</span>
                            </div>
                            <p class="supplier-info-card-text">@(!string.IsNullOrWhiteSpace(supplier.Name) ? supplier.Name : "-")</p>
                        </div>
                    </div>
                    <div class="col-sm-6 col-xl-4">
                        <div class="supplier-info-card">
                            <div class="supplier-info-card-title">
                                <i class="mdi mdi-identifier"></i>
                                <span>Supplier Code</span>
                            </div>
                            <p class="supplier-info-card-text">@(!string.IsNullOrWhiteSpace(supplier.SupplierCode) ? supplier.SupplierCode : "-")</p>
                        </div>
                    </div>
                    <div class="col-sm-6 col-xl-4">
                        <div class="supplier-info-card">
                            <div class="supplier-info-card-title">
                                <i class="mdi mdi-phone"></i>
                                <span>Contact Number</span>
                            </div>
                            <p class="supplier-info-card-text">@(!string.IsNullOrWhiteSpace(supplier.Number) ? supplier.Number : "-")</p>
                        </div>
                    </div>
                    <div class="col-sm-6 col-xl-4">
                        <div class="supplier-info-card">
                            <div class="supplier-info-card-title">
                                <i class="mdi mdi-email-outline"></i>
                                <span>Email</span>
                            </div>
                            <p class="supplier-info-card-text">
                                @if (!string.IsNullOrWhiteSpace(supplier.Email))
                                {
                                    <a href="mailto:@supplier.Email" class="text-decoration-none">@supplier.Email</a>
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </p>
                        </div>
                    </div>
                    <div class="col-sm-6 col-xl-4">
                        <div class="supplier-info-card">
                            <div class="supplier-info-card-title">
                                <i class="mdi mdi-earth"></i>
                                <span>Country</span>
                            </div>
                            <p class="supplier-info-card-text">@(!string.IsNullOrWhiteSpace(supplier.Country) ? supplier.Country : "-")</p>
                        </div>
                    </div>
                    <div class="col-sm-6 col-xl-4">
                        <div class="supplier-info-card">
                            <div class="supplier-info-card-title">
                                <i class="mdi mdi-account-group"></i>
                                <span>Declared Panel Size</span>
                            </div>
                            <p class="supplier-info-card-text">@(!string.IsNullOrWhiteSpace(supplier.Psize) ? supplier.Psize : "-")</p>
                        </div>
                    </div>
                    <div class="col-sm-6 col-xl-4">
                        <div class="supplier-info-card">
                            <div class="supplier-info-card-title">
                                <i class="mdi mdi-text-box-outline"></i>
                                <span>Description</span>
                            </div>
                            <p class="supplier-info-card-text">@(!string.IsNullOrWhiteSpace(supplier.Description) ? supplier.Description : "-")</p>
                        </div>
                    </div>
                    @if (!string.IsNullOrWhiteSpace(supplier.Notes))
                    {
                        <div class="col-sm-6 col-xl-4">
                            <div class="supplier-info-card">
                                <div class="supplier-info-card-title">
                                    <i class="mdi mdi-note-text-outline"></i>
                                    <span>Notes</span>
                                </div>
                                <p class="supplier-info-card-text">@supplier.Notes</p>
                            </div>
                        </div>
                    }
                    @if (supplier.CreationDate.HasValue)
                    {
                        <div class="col-sm-6 col-xl-4">
                            <div class="supplier-info-card">
                                <div class="supplier-info-card-title">
                                    <i class="mdi mdi-calendar-clock"></i>
                                    <span>Created On</span>
                                </div>
                                <p class="supplier-info-card-text">@supplier.CreationDate.Value.ToString("dd MMM yyyy")</p>
                            </div>
                        </div>
                    }
                    <div class="col-sm-6 col-xl-4">
                        <div class="supplier-info-card">
                            <div class="supplier-info-card-title">
                                <i class="mdi mdi-toggle-switch"></i>
                                <span>Status</span>
                            </div>
                            <p class="supplier-info-card-text">@((supplier.IsActive ?? 0) == 1 ? "Active" : "Inactive")</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-6 grid-margin stretch-card">
        <div class="card h-100">
            <div class="card-body">
                <h5 class="card-title supplier-section-title mb-3">Supplier Specs</h5>
                @if (Model?.SupplierPanelSizes != null && Model.SupplierPanelSizes.Count > 0)
                {
                    <div class="table-responsive">
                        <table class="table table-bordered table-sm align-middle supplier-table mb-0">
                            <thead>
                                <tr>
                                    <th>Country</th>
                                    <th class="text-end">Panel Size</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var panel in Model.SupplierPanelSizes)
                                {
                                    <tr>
                                        <td>@(!string.IsNullOrWhiteSpace(panel.Country) ? panel.Country : "-")</td>
                                        <td class="text-end">@(panel.Psize.HasValue ? panel.Psize.Value.ToString("N0") : "-")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <p class="text-muted mb-0">No supplier specs have been configured.</p>
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="grid-margin stretch-card">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title supplier-section-title mb-3">Status &amp; Redirects</h5>
                    @if (statusRedirects.Count > 0)
                    {
                        <div class="status-card-list">
                            @foreach (var redirect in statusRedirects)
                            {
                                var iconClass = statusIconClasses.TryGetValue(redirect.Label, out var resolvedIcon)
                                    ? resolvedIcon
                                    : "fas fa-link";

                                <div class="status-card-item">
                                    <div class="status-card-icon">
                                        <i class="@iconClass"></i>
                                    </div>
                                    <div class="status-card-content">
                                        <div class="status-card-label">@redirect.Label</div>
                                        <a href="@redirect.Url" class="redirect-link status-card-url" target="_blank" rel="noopener">
                                            <span class="redirect-link-text">@redirect.Url</span>
                                            <i class="mdi mdi-open-in-new"></i>
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted mb-0">No redirect URLs have been configured for this supplier.</p>
                    }
                </div>
            </div>
        </div>
        <div class="grid-margin stretch-card mt-4">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title supplier-section-title mb-3">Supplier Delivery Details</h5>
                    @if (Model?.SupplierDeliveryDetails != null && Model.SupplierDeliveryDetails.Count > 0)
                    {
                        <div class="table-responsive-md">
                            <table class="table table-bordered table-sm align-middle supplier-table mb-0" id="supplier-delivery-table">
                                <thead>
                                    <tr>
                                        <th>Country</th>
                                        <th class="text-end">Total</th>
                                        <th class="text-end">Completes</th>
                                        <th class="text-end">Incompletes</th>
                                        <th class="text-end">Screened</th>
                                        <th class="text-end">Quota Full</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var delivery in Model.SupplierDeliveryDetails)
                                    {
                                        <tr>
                                            <td>@(!string.IsNullOrWhiteSpace(delivery.Country) ? delivery.Country : "-")</td>
                                            <td class="text-end">@delivery.Total.ToString("N0")</td>
                                            <td class="text-end">@delivery.Completes.ToString("N0")</td>
                                            <td class="text-end">@delivery.Incompletes.ToString("N0")</td>
                                            <td class="text-end">@delivery.Screened.ToString("N0")</td>
                                            <td class="text-end">@delivery.QuotaFull.ToString("N0")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted mb-0">No delivery details are available for this supplier.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            const $deliveryTable = $("#supplier-delivery-table");
            if ($deliveryTable.length) {
                $deliveryTable.DataTable({
                    aaSorting: [],
                    dom: 'Bfrtip',
                    buttons: [
                        {
                            extend: 'excelHtml5',
                            text: '<img src="/AdminImg/download%20(1).jpeg" alt="Excel" />',
                            titleAttr: 'Export to Excel',
                            filename: 'Data_Export'
                        },
                        {
                            extend: 'csvHtml5',
                            text: '<img src="/AdminImg/download%20(2).jpeg" alt="CSV" />',
                            titleAttr: 'Export to CSV',
                            filename: 'Data_Export'
                        }
                    ]
                });
            }
        });
    </script>
}
