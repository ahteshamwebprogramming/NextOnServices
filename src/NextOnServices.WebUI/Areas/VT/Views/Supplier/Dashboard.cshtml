@model NextOnServices.Infrastructure.ViewModels.Supplier.SupplierDashboardViewModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Supplier Dashboard</title>
    <!-- Bootstrap CSS -->
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

    <link href="~/css/vt/blockuisupplier.css" rel="stylesheet" />
    <!-- DataTables CSS -->
    @* <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css"> *@
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">

    <style>
        /* Additional custom styling */
        .navbar-custom {
            background-color: #2C3E50;
        }

            .navbar-custom .navbar-brand, .navbar-custom .nav-link, .navbar-custom .vendor-info {
                color: #fff;
            }

        .navbar-center {
            margin: auto;
        }

        .dashboard-container {
            margin-top: 20px;
        }

        .dashboard-summary {
            margin-bottom: 30px;
        }

        .metric-card {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(0, 0, 0, 0.08);
            border-radius: 0.75rem;
        }

        .metric-card .card-body {
            display: flex;
            flex-direction: column;
            gap: 0.35rem;
        }

        .metric-card .card-title {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1rem;
            font-weight: 600;
            /* color: #1b263b; */
            margin-bottom: 0.25rem;
        }

        .metric-icon {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            border-radius: 0.5rem;
            background: rgba(13, 110, 253, 0.12);
            /* color: #090a0a; */
            font-size: 1.2rem;
        }

        .metric-value {
            font-size: 1.4rem;
            font-weight: 700;
            /* color: #090a0a; */
            margin-bottom: 0;
        }

        .metric-subtext {
            font-size: 0.9rem;
            /* color: #6c757d; */
            margin-bottom: 0;
        }

        .card {
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }

        .vendor-info {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        html, body {
            margin: 0;
            padding: 0;
            min-height: 100%;
            display: flex;
            flex-direction: column;
        }

        .container.dashboard-container {
            flex: 1; /* Pushes the footer to the bottom when content is short */
        }

        footer {
            position: fixed; /* Keeps the footer fixed at the bottom */
            bottom: 0;
            left: 0;
            width: 100%; /* Ensures it spans the full width of the viewport */
            background-color: #2C3E50;
            color: #fff;
            padding: 10px 0;
            text-align: center;
            z-index: 1000; /* Ensures it stays on top of other elements */
            box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.2); /* Optional shadow for better visual separation */
        }
        /* Table-specific styles */
        .table-container {
            margin-top: 20px;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .table th {
            background-color: #2C3E50;
            color: #fff;
        }

        .search-box {
            margin-bottom: 15px;
        }

        [name="supplierTable_length"] {
            width: 50px;
        }

        #supplierTable_processing {
            z-index: 99999;
        }

        .btn-edit-profile, .buttons-excel {
            background: linear-gradient(145deg, #005f99, #007bb5); /* Gradient from deep blue to lighter blue */
            color: #fff;
            padding: 10px 20px;
            font-weight: bold;
            border: none;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2); /* Add a slight shadow for a glossy effect */
            transition: background 0.3s ease, transform 0.2s ease;
        }

            .btn-edit-profile:hover, .buttons-excel:hover {
                background: linear-gradient(145deg, #007bb5, #005f99); /* Reverse gradient on hover */
                transform: scale(1.05); /* Slightly enlarge on hover */
                box-shadow: 0 6px 10px rgba(0, 0, 0, 0.3); /* Enhance shadow on hover */
            }

            .btn-edit-profile i {
                margin-right: 5px;
            }

        .dt-buttons {
            width: 50%;
            display: inline-block;
        }

        #supplierTable_filter {
            width: 50%;
            display: inline-block;
        }

        .withdraw-button {
            min-width: 100px;
        }

        .cell-nowrap {
            display: block;
            max-width: 100%;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

            .cell-nowrap a {
                color: inherit;
                text-decoration: none;
                white-space: nowrap;
                display: inline;
            }

        .status-badge {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            min-width: 90px;
        }

        .dataTables_filter input[type=search] {
            border-top: none !important;
            border-left: none !important;
            border-right: none !important;
            
        }

        .card-a {
            background: #4e9c87;
            color: #040404
           
        }

        .card-b {
            background: #7BB661;
            color: #040404
        }

        .card-c {
            background: #B3D936;
            color: #040404
        }

        .card-d {
            background: #BC9A17;
            color: #040404
        }

        .card-e {
            background: #CFAC33;
            color: #040404
        }

        .card-f {
            background: #FFD400;
            color: #040404
        }

      

    </style>
</head>
<body>

    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-custom">
        <a class="navbar-brand" href="#" style="padding-top: 0px;padding-bottom: 0px;">
            <img src="/LoginRoot/NextonLogo.png" class="mr-2" alt="logo" style="height:40px;">
            @* <i class="fas fa-chart-line"></i> SkyDash Admin *@
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav w-100 justify-content-center">
                <li class="nav-item">
                    <a class="nav-link" href="/VT/Supplier/Dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/VT/Supplier/Profile"><i class="fas fa-user"></i> Profile</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/VT/Supplier/ChangePassword"><i class="fas fa-key"></i> Change Password</a>
                </li>
            </ul>

            <div class="vendor-info ml-auto">
                <span class="mr-3">Welcome, <strong>@Model?.Supplier?.Name</strong></span>
                <a href="/VT/Supplier/Login" style=" white-space: nowrap;" class="btn btn-sm btn-outline-light"><i class="fas fa-sign-out-alt"></i> Logout</a>
            </div>
        </div>
    </nav>

    <!-- Dashboard Content -->
    <div class="container dashboard-container">
        <h2 class="text-center mb-4">Project Dashboard</h2>
        <p class="text-center text-muted mb-4">Comprehensive snapshot of supplier delivery metrics, invoicing progress, and global footprint.</p>

        <div class="row dashboard-summary">
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card metric-card h-100 card-a">
                    <div class="card-body">
                        <h5 class="card-title">
                            <span class="metric-icon"><i class="fas fa-file-invoice-dollar"></i></span>
                            Projects Bid
                        </h5>
                        <p class="metric-value">@Model?.ProjectDashboardCards?.ProjectBid</p>
                        <p class="metric-subtext">Successfully billed engagements</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card metric-card h-100 card-b">
                    <div class="card-body">
                        <h5 class="card-title">
                            <span class="metric-icon"><i class="fas fa-check-circle"></i></span>
                            Projects Completed
                        </h5>
                        <p class="metric-value">@Model?.ProjectDashboardCards?.ProjectsCompleted</p>
                        <p class="metric-subtext">Total successful project deliveries</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card metric-card h-100 card-c">
                    <div class="card-body">
                        <h5 class="card-title">
                            <span class="metric-icon"><i class="fas fa-stopwatch"></i></span>
                            Avg. Duration
                        </h5>
                        <p class="metric-value">@Model?.ProjectDashboardCards?.AverageDuration min</p>
                        <p class="metric-subtext">Average project completion time</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card metric-card h-100 card-d">
                    <div class="card-body">
                        <h5 class="card-title">
                            <span class="metric-icon"><i class="fas fa-dollar-sign"></i></span>
                            Avg. Project Value 
                        </h5>
                        <p class="metric-value">@Model?.ProjectDashboardCards?.AverageProjectValue </p>
                        <p class="metric-subtext">Average value per engagement</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card metric-card h-100 card-e">
                    <div class="card-body">
                        <h5 class="card-title">
                            <span class="metric-icon"><i class="fas fa-globe"></i></span>
                            Countries Covered
                        </h5>
                        <p class="metric-value">@Model?.ProjectDashboardCards?.CountriesCovered</p>
                        <p class="metric-subtext">Global reach and coverage</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card metric-card h-100 card-f">
                    <div class="card-body">
                        <h5 class="card-title">
                            <span class="metric-icon"><i class="fas fa-calendar-check"></i></span>
                            Supplier Since
                        </h5>
                        <p class="metric-value">@Model?.ProjectDashboardCards?.SupplierSince</p>
                        <p class="metric-subtext">year of partnership</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            @* <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title"><i class="fas fa-building"></i> Supplier Name</h5>
                        <p class="card-text">@Model?.Supplier?.SupplierCode</p>
                    </div>
                </div>
            </div> *@
            <div class="col-md-6 mb-4">
                @* <div class="card">
                    <div class="card-body">
                        <h5 class="card-title"><i class="fas fa-info-circle"></i> Supplier Description</h5>
                        <p class="card-text">@Model?.Supplier?.Name</p>
                    </div>
                </div> *@
            </div>
            <!-- Add more fields as needed following the same format -->
        </div>
    </div>
    <div class="table-container" style="padding-bottom:100px;">
        @* <h4 class="mb-3">Supplier Data</h4> *@

        <div id="exportStatus" style="display: none;">
            <p id="statusMessage">Data download in process...</p>
            <div id="progressContainer" style="width: 100%; background-color: #f3f3f3;">
                <div id="progressBar" style="width: 0%; height: 25px; background-color: #4caf50; text-align: center; color: white;">0%</div>
            </div>
        </div>

        @* <a href="/VT/Supplier/EditProfile" class="btn btn-edit-profile"><i class="fas fa-edit"></i> Edit Profile</a> *@
        <div class="table-responsive">
            <table id="supplierTable" class="table table-bordered table-striped">
                <thead>
                    <tr>
                       
                        <th>Status</th>
                        <th style="white-space: nowrap;">Project Number</th>

                        <th>Country</th>
                        <th>CPI</th>
                        <th>Respondants</th>
                        <th>OLink</th>
                        @* <th>MLink</th> *@
                        <th>Total</th>
                        <th>Complete</th>
                        <th>Terminate</th>
                        <th>Overquota</th>
                        <th>SecurityTerm</th>
                        <th>FraudError</th>
                        <th>Incomplete</th>
                        <th>LOI</th>
                        <th>IRPercent</th>
                        <th>Notes</th>
                        <th>Comments</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.SupplierProjects != null && Model.SupplierProjects.Any())
                    {
                        foreach (var item in Model.SupplierProjects)
                        {
                            <tr>
                                <td>
                                    @{
                                        var statusValue = item.Status ?? 0;
                                        var statusText = "-";
                                        var statusClass = "badge badge-secondary";

                                        switch (statusValue)
                                        {
                                            case 1:
                                                statusText = "Closed";
                                                statusClass = "badge badge-danger";
                                                break;
                                            case 2:
                                                statusText = "Live";
                                                statusClass = "badge badge-success";
                                                break;
                                            case 3:
                                                statusText = "On Hold";
                                                statusClass = "badge badge-warning";
                                                break;
                                            case 4:
                                                statusText = "Cancelled";
                                                statusClass = "badge badge-danger";
                                                break;
                                            case 5:
                                                statusText = "Awarded";
                                                statusClass = "badge badge-info";
                                                break;
                                            case 6:
                                                statusText = "Invoiced";
                                                statusClass = "badge badge-default";
                                                break;
                                        }
                                    }
                                    <span class="status-badge @statusClass">@statusText</span>
                                </td>
                                <td>@item.PID</td>
                                <td>
                                    @{
                                        var countryDisplay = string.IsNullOrWhiteSpace(item.Country)
                                            ? string.Empty
                                            : System.Text.RegularExpressions.Regex.Replace(item.Country, "\\s+", " ")
                                                .Trim();
                                    }
                                    <div class="cell-nowrap" title="@countryDisplay">@countryDisplay</div>
                                </td>
                                <td>@item.CPI</td>
                                <td>@item.Respondants</td>
                                <td>
                                    @{
                                        var oLinkDisplay = string.IsNullOrWhiteSpace(item.OLink)
                                            ? string.Empty
                                            : System.Text.RegularExpressions.Regex.Replace(item.OLink, "\\s+", " ")
                                                .Trim();
                                    }
                                    <div class="cell-nowrap" title="@oLinkDisplay">@oLinkDisplay</div>
                                </td>
                                @* <td>@item.MLink</td> *@
                                <td>@item.Total</td>
                                <td>@item.Complete</td>
                                <td>@item.Terminate</td>
                                <td>@item.Overquota</td>
                                <td>@item.SecurityTerm</td>
                                <td>@item.FraudError</td>
                                <td>@item.Incomplete</td>
                                <td>@item.LOI</td>
                                <td>@item.IRPercent</td>
                                <td>@item.Notes</td>
                                <td class="text-center">
                                    <button type="button"
                                            class="btn btn-link text-primary comment-button"
                                            data-toggle="modal"
                                            data-target="#commentModal"
                                            data-comment="@Html.(item.Notes ?? string.Empty)">
                                        <i class="fas fa-comments fa-lg"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="modal fade" id="commentModal" tabindex="-1" role="dialog" aria-labelledby="commentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="commentModalLabel">Project Comment</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p id="commentModalText" class="mb-0"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer class="text-center mt-5">
        <p>&copy; 2024 Nexton Services. All rights reserved.</p>
    </footer>

    <!-- Bootstrap and jQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap4.min.js"></script>

    <script src="https://cdn.datatables.net/buttons/1.7.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.print.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.blockUI/2.70/jquery.blockUI.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script src="~/customJS/Common.js"></script>
    <script>
        var table;
        $(document).ready(function () {
            LoadProjectsSupplierWise();

            $('#commentModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var comment = button.data('comment');

                if (!comment) {
                    comment = 'No comments available.';
                }

                $(this).find('#commentModalText').text(comment);
            });
        });

        function exportAllData(dt, button, config) {
            let page = 1;
            const pageSize = 500;
            const allData = [];

            let totalRecords = 0;
            let processedRecords = 0;

            $('#exportStatus').show();
            $('#statusMessage').text('Data download in process...');
            let request = {};
            request.start = 0;
            request.length = 1;
            $.ajax({
                type: 'POST',
                contentType: "application/json;charset=utf-8",
                url: "/VT/Supplier/GetSupplierProjectsBySupplierId",
                data: JSON.stringify(request),
                datatype: "json",
                success: function (data) {
                    totalRecords = data.recordsTotal; // Get total records from response

                    // Start fetching data
                    fetchData();
                },
                error: function (xhr, status, error) {
                    alert("Error Occurred");
                    $('#exportStatus').text('Error fetching total record count.');
                }
            });




            function fetchData() {
                let formData = {};
                formData.start = page;
                formData.length = pageSize;
                $.ajax({
                    type: 'POST',
                    contentType: "application/json;charset=utf-8",
                    url: "/VT/Supplier/GetSupplierProjectsBySupplierId_ExportData",
                    data: JSON.stringify(formData),
                    datatype: "json",
                    success: function (data) {
                        if (data.length > 0) {
                            allData.push(...data);
                            processedRecords += data.length;
                            page++;


                            // Update the status message and progress bar
                            const progressPercentage = Math.min((processedRecords / totalRecords) * 100, 100);
                            $('#statusMessage').text(`Data download in process... ${processedRecords} of ${totalRecords} records processed.`);
                            $('#progressBar').css('width', `${progressPercentage}%`).text(`${Math.round(progressPercentage)}%`);



                            fetchData(); // Fetch next page
                        } else {
                            // All data fetched, now trigger export

                            $('#statusMessage').text('Data download complete. Exporting data...');
                            $('#progressBar').css('width', '100%').text('100%');

                            exportToExcel(dt, allData, 'Projects.xlsx');


                            $('#statusMessage').text('Data download complete.'); // Final status message

                            setTimeout(function () {
                                $('#exportStatus').hide();
                            }, 3000); // 5000 milliseconds = 5 seconds
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching data:', error);
                    }
                });
            }

            //fetchData();
        }
        function exportToExcel(dt, allData, fileName) {

            const headers = dt.columns().header().toArray().map(header => $(header).text());


            const sheetData = convertDataToArray(allData, headers);

            const ws = XLSX.utils.aoa_to_sheet(sheetData);


            const headerStyle = { font: { bold: true } };
            const headerRowCount = 1; // First row is header row

            for (let col = 0; col < sheetData[0].length; col++) {
                const cellAddress = { c: col, r: 0 }; // Header row
                const cellRef = XLSX.utils.encode_cell(cellAddress);
                if (!ws[cellRef]) ws[cellRef] = {};
                ws[cellRef].s = headerStyle;
            }
            // Auto-size columns
            const colWidths = sheetData[0].map((_, i) => Math.max(...sheetData.map(row => (row[i] || '').toString().length)));
            ws['!cols'] = colWidths.map(width => ({ wch: width + 2 })); // Adding extra padding


            // Create a workbook and append the worksheet
            const wb = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(wb, ws, "Sheet1");

            // Export the workbook
            XLSX.writeFile(wb, fileName);
        }

        function convertDataToArray(allData, headers1) {

            excludeColumns = ["projectName", "projectMappingId", "projectId", "supplierId", "supplierName"];

            //const headers = Object.keys(allData[0]).filter(header => !excludeColumns.includes(header));
            const headers = ["status", "pid", "country", "cpi", "respondants", "oLink", "mLink", "total", "complete", "terminate", "overquota", "securityTerm", "fraudError", "incomplete", "loi", "irPercent", "notes"];

            // Convert data to an array of arrays, excluding specified columns
            const data = allData.map(row => headers.map(header => row[header]));
            const displayHeaders = ["Status", "Project Number", "Country", "CPI", "Respondants", "OLink", "MLink", "Total", "Complete", "Terminate", "Overquota", "Security Term", "Fraud Error", "Incomplete", "LOI", "IR Percent", "Notes"];
            // Add headers as the first row
            return [displayHeaders, ...data];
        }

        function WithDrawlPrompt(ProjectMappingId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You want to withdrawl this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes,!',
                customClass: {
                    confirmButton: 'btn btn-primary me-3',
                    cancelButton: 'btn btn-label-secondary'
                },
                buttonsStyling: false
            }).then(function (result) {
                if (result.value) {
                    WithDrawl(ProjectMappingId);
                }
            });
        }

        function WithDrawl(ProjectMappingId) {
            BlockUI();
            let inputDTO = {};
            inputDTO.Id = ProjectMappingId;
            $.ajax({
                type: "POST",
                url: "/VT/Supplier/WithDrawlProject",
                contentType: 'application/json',
                data: JSON.stringify(inputDTO),
                success: function (data) {
                    UnblockUI();
                    Swal.fire({ title: 'Success!', text: "Updated Succesfully", icon: 'success', confirmButtonText: 'OK' }).then((result) => {
                        if (result.isConfirmed) {
                            LoadProjectsSupplierWise();
                        }
                    });
                },
                error: function (error) {
                    $erroralert("Error!", error.responseText);
                    UnblockUI();
                }
            });
        }

        function StartProjectPrompt(ProjectMappingId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You want to start this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes,!',
                customClass: {
                    confirmButton: 'btn btn-primary me-3',
                    cancelButton: 'btn btn-label-secondary'
                },
                buttonsStyling: false
            }).then(function (result) {
                if (result.value) {
                    StartProject(ProjectMappingId);
                }
            });
        }
        function StartProject(ProjectMappingId) {
            BlockUI();
            let inputDTO = {};
            inputDTO.Id = ProjectMappingId;
            $.ajax({
                type: "POST",
                url: "/VT/Supplier/StartProject",
                contentType: 'application/json',
                data: JSON.stringify(inputDTO),
                success: function (data) {
                    UnblockUI();
                    Swal.fire({ title: 'Success!', text: "Updated Succesfully", icon: 'success', confirmButtonText: 'OK' }).then((result) => {
                        if (result.isConfirmed) {
                            LoadProjectsSupplierWise();
                        }
                    });
                },
                error: function (error) {
                    $erroralert("Error!", error.responseText);
                    UnblockUI();
                }
            });
        }


        function LoadProjectsSupplierWise() {
            if ($.fn.DataTable.isDataTable('#supplierTable')) {
                table.destroy(); // Destroy the existing instance
                $('#supplierTable tbody').empty(); // Optional: clear table data to avoid duplication
            }
            table = $('#supplierTable').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": "/VT/Supplier/GetSupplierProjectsBySupplierId",
                    "type": "POST",
                    "contentType": "application/json; charset=utf-8",
                    "data": function (d) {
                        // d.pageNumber = Math.floor(d.start / d.length) + 1;  // Calculate the page number
                        // d.pageSize = d.length;  // Number of records per page
                        // d.searchValue = d.search.value;  // Capture search value
                        // d.orderByColumn = d.order[0].column;  // Get the column to sort by
                        // d.orderByDirection = d.order[0].dir;  // Ascending or descending
                        // d.draw = d.draw;  // Ascending or descending
                        console.log(d);
                        return JSON.stringify(d);
                        //return d;
                    },
                    "dataSrc": function (json) {
                        console.log("Server Response:", json); // Log the response to the console
                        return json.data; // Return the data array to the DataTable
                    },
                    "error": function (jqXHR, textStatus, errorThrown) {
                        console.error("AJAX error: ", textStatus, errorThrown); // Log errors
                    }
                },
                "dom": 'Bfrtip',
                "buttons": [{
                    extend: 'excel',
                    text: 'Export All',
                    action: function (e, dt, button, config) {
                        exportAllData(dt, button, config);
                    }
                }],
                "columns": [

                    {
                        "data": "status",
                        "render": function (data, type) {
                            if (type !== 'display') {
                                return data;
                            }

                            const statusValue = parseInt(data, 10);
                            const statusMap = {
                                1: { text: 'Closed', className: 'badge badge-danger' },
                                2: { text: 'Live', className: 'badge badge-success' },
                                3: { text: 'On Hold', className: 'badge badge-warning' },
                                4: { text: 'Cancelled', className: 'badge badge-danger' },
                                5: { text: 'Awarded', className: 'badge badge-info' },
                                6: { text: 'Invoiced', className: 'badge badge-default' }
                            };

                            const statusInfo = statusMap[statusValue] || { text: '-', className: 'badge badge-secondary' };
                            return `<span class="status-badge ${statusInfo.className}">${statusInfo.text}</span>`;
                        }
                    },
                    { "data": "pid" },
                    {
                        "data": "country",
                        "render": function (data, type) {
                            if (!data) {
                                return '';
                            }

                            if (type !== 'display') {
                                return data;
                            }

                            const safeText = $('<div>').text(data).html().replace(/\s+/g, ' ').trim();
                            return `<div class="cell-nowrap" title="${safeText}">${safeText}</div>`;
                        }
                    },
                    { "data": "cpi" },
                    { "data": "respondants" },
                    {
                        "data": "oLink",
                        "render": function (data, type) {
                            if (!data) {
                                return '';
                            }

                            if (type !== 'display') {
                                return data;
                            }

                            const safeText = $('<div>').text(data).html().replace(/\s+/g, ' ').trim();
                            return `<div class="cell-nowrap" title="${safeText}">${safeText}</div>`;
                        }
                    },
                    // { "data": "mLink" },
                    { "data": "total" },
                    { "data": "complete" },
                    { "data": "terminate" },
                    { "data": "overquota" },
                    { "data": "securityTerm" },
                    { "data": "fraudError" },
                    { "data": "incomplete" },
                    { "data": "loi" },
                    { "data": "irPercent" },
                    { "data": "notes" },
                    {
                        "data": null, // Last column for the button
                        "render": function (data, type, row) {
                            if (row.projectMappingChecked == 1) {
                                return `<button class="btn btn-sm btn-success withdraw-button" onclick="StartProjectPrompt(${row.projectMappingId})" data-id="${row.ProjectMappingId}">Start</button>`;
                            }
                            else {
                                return `<button class="btn btn-sm btn-danger withdraw-button" onclick="WithDrawlPrompt(${row.projectMappingId})" data-id="${row.ProjectMappingId}">Withdraw</button>`;
                            }

                        },
                        "orderable": false, // Disable sorting for this column
                        "searchable": false // Disable searching for this column
                    }
                ],
                "columnDefs": [
                    {
                        // "targets": 0,  // First column
                        // "orderable": false,
                        // "render": function (data, type, row, meta) {
                        //     return meta.row + 1 + meta.settings._iDisplayStart; // Calculate the row number
                        // }
                    }
                ],
                "order": [[1, 'asc']],
            });
        }


    </script>
</body>
</html>
