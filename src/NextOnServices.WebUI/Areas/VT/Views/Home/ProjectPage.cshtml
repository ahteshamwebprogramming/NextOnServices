@using NextOnServices.Infrastructure.Helper;
@using System.Web;
@model NextOnServices.Infrastructure.ViewModels.ProjectDetails.ProjectDetailPageViewModel

@{
    ViewData["Title"] = "Project Page";
    //Layout = "~/Views/Shared/_Layout.cshtml";
    Layout = "~/Areas/VT/Views/Shared/_Layout.cshtml";
}
<link href="~/css/custmahte.css" rel="stylesheet" asp-append-version="true"/>
<link href="~/css/tooltip.css" rel="stylesheet" asp-append-version="true"/>


<style>
    .card-body .mb-4 {
        margin:0 0 7px 0 !important;
        font-size: 16px ;
    }
    .bordertophighlight {
        border-top: 1px solid #f1f1f1;
        box-shadow: 0px 1px 4px 1px #f1f1f1;
        padding: 12px;
    }

    .card-light-danger .tooltip1 {
        position: absolute;
        bottom: 19px;
        right: 18px;
        border: #fff solid 1px;
        font-size: 17px;
        top:auto;
        padding: 7px;
        border-radius: 11px;
    }
   

    .card.card-tale {
        background-color: #A71E4A !important;
    }
    .card.card-dark-blue {
        background-color: #F05624 !important;
    }

    .card.card-light-blue {
        background-color: #F89A20 !important;
    }

    .card.card-light-danger {
        background-color: #F7BC18 !important;
    }

    .card.card-light-danger1 {
        background-color: #50C1E9 !important;
    }
    .container1_ppd {
        display: block;
        position: relative;
        padding-left: 0px;
        margin-bottom: 0px;
        cursor: pointer;
        font-size: 19px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    .checkmark_ppd {
        position: absolute;
        top: 0px;
        left: 0;
        height: 20px;
        width: 20px;
        background-color: #eee;
    }

    .projectInfotile {
        max-width: 20%;
    }

    .header {
        font-weight: 600;
    }

    .color_amber {
        color: orange;
    }

    .color_red {
        color: red;
    }

    .color_yellow {
        color: yellow;
    }

    .color_blue {
        color: blue;
    }

    .color_white {
        color: wheat;
    }

    .color_white1 {
        display: none !important;
    }

    .color_green {
        color: green;
    }

    .card-body .menu-icon img {
        width: 29px;
        margin-bottom: 12px;
    }
    

</style>

<div class="row">
    <div class="col-md-12 grid-margin transparent">
        <div class="row">
            <div class="col-md-3 mb-4 stretch-card transparent projectInfotile">
                <div class="card card-tale">
                    <div class="card-body">
                        <div class="justify-content-center d-flex justify-content-between">
                            <div class="icons2">
                                
                                <i class="menu-icon mb-3"><img src="~/theme/images/status.svg" /></i>
                            <p class="mb-4">Projects Status</p>
                            </div>
                            <div>
                                <p class="fs-30 mb-2"> @(Model == null ? "" : Model.ProjectDetailList == null ? "" : Model.ProjectDetailList.Count() == 0 ? "" : Model?.ProjectDetailList?.FirstOrDefault().StatusName) </p>
                            </div>
                        </div>
                       
                        @*<p>10.00% (30 days)</p>*@
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-4 stretch-card transparent projectInfotile">
                <div class="card card-dark-blue">
                    <div class="card-body">
                        <div class="justify-content-center d-flex justify-content-between">
                              <div class="icons2">
                                <i class="menu-icon mb-3"><img src="~/theme/images/achievement.svg" /></i>
                                
                            <p class="mb-4">Achievement</p>
                            </div>
                            <p class="fs-30 mb-2">@(Model == null ? "0% Achieved" : Model.Table5List == null ? "0% Achieved" : Model.Table5List.Count == 0 ? "0% Achieved" : Model.Table5List.FirstOrDefault() == null ? "0% Achieved" : Model.Table5List.FirstOrDefault().CompletePercent + "% Achieved")</p>
                            </div>
                       
                        

                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-4 stretch-card transparent projectInfotile">
                <div class="card card-light-blue">
                    <div class="card-body">
                         <div class="justify-content-center d-flex justify-content-between">
                              <div class="icons2">
                                <i class="menu-icon mb-3"><img src="~/theme/images/respondent.svg" /></i>
                           <p class="mb-4">Respondents</p>
                            </div>
                            <p class="fs-30 mb-2">@(Model == null ? "0" : Model.FractionComplete0 == null ? "0" : Model.FractionComplete0.Complete) out of @(Model == null ? "0" : Model.FractionComplete0 == null ? "0" : Model.FractionComplete0.Total)</p>
                            </div>
                        
                        

                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-4 stretch-card transparent projectInfotile">
                <div class="card card-light-danger">
                    <div class="card-body">

                         <div class="justify-content-center d-flex justify-content-between">
                              <div class="icons2">
                                <i class="menu-icon mb-3"><img src="~/theme/images/actual loi.svg" /></i>
                           <p class="mb-4">Actual IR</p>
                            </div>
                             <p class="fs-30 mb-2">
                            @(Model == null ? "0%" : Model.FractionComplete1 == null ? "0%" : Model.FractionComplete1.IRPercent + "%")
                            @{
                                if (Model != null)
                                {
                                    float flagIR = 0;
                                    float flagLOI = 0;
                                    float EXPIR = Model.FractionComplete1.ExpectedIR == null ? 0 : Model.FractionComplete1.ExpectedIR;
                                    float ACTIR = Model.FractionComplete1.ActualIR == null ? 0 : Model.FractionComplete1.ActualIR;
                                    float EXPLOI = Model.FractionComplete3.Expected_LOI == null ? 0 : Model.FractionComplete3.Expected_LOI;
                                    float ACTLOI = Model.FractionComplete3.Actual_LOI == null ? 0 : Model.FractionComplete3.Actual_LOI;
                                    if (EXPIR > ACTIR)
                                    {
                                        float drop = EXPIR - ACTIR;
                                        float dropPercent = drop * 100 / EXPIR;
                                        if (dropPercent > 50)
                                        {
                                            flagIR = 1;
                                        }
                                    }
                                    if (ACTLOI > EXPLOI)
                                    {
                                        float drop = ACTLOI - EXPLOI;
                                        float dropPercent = drop * 100 / EXPLOI;
                                        if (dropPercent > 35)
                                        {
                                            flagLOI = 1;
                                        }
                                    }

                                    if (flagIR > 0 && flagLOI > 0)
                                    {
                                        <span id="spnflag" class="fa fa-flag color_red tooltip1"><span style="font-size:12px;" id="spntooltipir" class="tooltiptext1 toolti_cust color_amber_b">IR drop by 50%.LOI raised by 35%</span></span>
                                    }
                                    else if (flagIR > 0)
                                    {
                                        <span id="spnflag" class="fa fa-flag color_blue tooltip1"><span style="font-size:12px;" id="spntooltipir" class="tooltiptext1 toolti_cust color_amber_b">IR drop by 50%</span></span>
                                    }
                                    else if (flagLOI > 0)
                                    {
                                        <span id="spnflag" class="fa fa-flag color_yellow tooltip1"><span style="font-size:12px;" id="spntooltipir" class="tooltiptext1 toolti_cust color_amber_b">LOI raised by 35%</span></span>
                                    }
                                    else
                                    {
                                        <span id="spnflag" class="fa fa-flag color_white1 tooltip1"><span style="font-size:12px;" id="spntooltipir" class="tooltiptext1 toolti_cust color_amber_b">IR and LOI under control</span></span>
                                    }

                                }

                            }

                        </p>
                            </div>

                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-4 stretch-card transparent projectInfotile">
                <div class="card card-light-danger1">
                    <div class="card-body">
                         <div class="justify-content-center d-flex justify-content-between">
                              <div class="icons2">
                                <i class="menu-icon mb-3"><img src="~/theme/images/time.svg" /></i>
                           <p class="mb-4">Actual LOI</p>
                            </div>
                             <p class="fs-30 mb-2">@(Model == null ? "0 min" : Model.FractionComplete3 == null ? "0 min" : Model.FractionComplete3.Actual_LOI + " min")</p>
                            </div>
                        
                       

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title mb-0">Survey Details</p>

                <div class="row mt-6">
                    <div class="col-md-6">
                        <table class="table table-hover table-striped table-bordered">
                            <tbody>
                                <tr>
                                    <td class="header w-30">Survey ID</td>
                                    <td>
                                        <span id="lblSurveyID">
                                            @{
                                                if (Model != null)
                                                {
                                                    if (Model.ProjectDetailList != null)
                                                    {
                                                        if (Model.ProjectDetailList.Count > 0)
                                                        {
                                                            <span> @Model.ProjectDetailList.FirstOrDefault().PID </span>
                                                        }
                                                    }
                                                }
                                            }
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="header">Survey Name</td>
                                    <td>
                                        <span id="lblSurvayname">
                                            @{
                                                if (Model != null)
                                                {
                                                    if (Model.ProjectDetailList != null)
                                                    {
                                                        if (Model.ProjectDetailList.Count > 0)
                                                        {
                                                            <span> @Model.ProjectDetailList.FirstOrDefault().PName </span>
                                                        }
                                                    }
                                                }
                                            }
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="header">Client</td>
                                    <td>
                                        <span id="lblClient">
                                            @{
                                                if (Model != null)
                                                {
                                                    if (Model.ProjectDetailList != null)
                                                    {
                                                        if (Model.ProjectDetailList.Count > 0)
                                                        {
                                                            <span> @Model.ProjectDetailList.FirstOrDefault().Company </span>
                                                        }
                                                    }
                                                }
                                            }
                                        </span>
                                    </td>

                                </tr>
                                <tr>
                                    <td class="header">Project Manager</td>
                                    <td>
                                        <span id="lblProjectManager">
                                            @{
                                                if (Model != null)
                                                {
                                                    if (Model.ProjectDetailList != null)
                                                    {
                                                        if (Model.ProjectDetailList.Count > 0)
                                                        {
                                                            <span> @Model.ProjectDetailList.FirstOrDefault().UserName </span>
                                                        }
                                                    }
                                                }
                                            }
                                        </span>
                                    </td>

                                </tr>
                                <tr>
                                    <td class="header">Country</td>
                                    <td>
                                        <span id="lblCountry">
                                            @{
                                                if (Model != null)
                                                {
                                                    if (Model.ProjectDetailList != null)
                                                    {
                                                        if (Model.ProjectDetailList.Count > 0)
                                                        {
                                                            <span> @Model.ProjectDetailList.FirstOrDefault().Country </span>
                                                        }
                                                    }
                                                }
                                            }
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="header">Length Of Interview</td>
                                    <td>
                                        <span id="lblLOI">
                                            @{
                                                if (Model != null)
                                                {
                                                    if (Model.ProjectDetailList != null)
                                                    {
                                                        if (Model.ProjectDetailList.Count > 0)
                                                        {
                                                            <span> @Model.ProjectDetailList.FirstOrDefault().LOI </span>
                                                        }
                                                    }
                                                }
                                            }
                                        </span>&nbsp;<span>min</span>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="header">CPI</td>
                                    <td>
                                        $&nbsp;
                                        <span id="lblCPI">
                                            @{
                                                if (Model != null)
                                                {
                                                    if (Model.ProjectDetailList != null)
                                                    {
                                                        if (Model.ProjectDetailList.Count > 0)
                                                        {
                                                            <span> @Model.ProjectDetailList.FirstOrDefault().CPI </span>
                                                        }
                                                    }
                                                }
                                            }
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="header">Expected IR</td>
                                    <td>
                                        <span id="txtEIR">
                                            @{
                                                if (Model != null)
                                                {
                                                    if (Model.FractionComplete1 != null)
                                                    {
                                                        if (Model.FractionComplete1.ExpectedIR != null)
                                                        {
                                                            <span> @Model.FractionComplete1.ExpectedIR</span>
                                                        }
                                                    }
                                                }
                                            }
                                            %
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="header">End Date</td>
                                    <td>
                                        <span id="lblEDate">
                                            @{
                                                if (Model != null)
                                                {
                                                    if (Model.ProjectDetailList != null)
                                                    {
                                                        if (Model.ProjectDetailList.Count > 0)
                                                        {
                                                            if (Model.ProjectDetailList.FirstOrDefault().edate != null)
                                                            {
                                                                <span>
                                                                    @(((DateTime)Model.ProjectDetailList.FirstOrDefault().edate).ToString("dd-MMM-yyyy"))
                                                                </span>
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="header">Notes</td>
                                    <td style="white-space:inherit">
                                        <span id="lblNotes">
                                            @{
                                                if (Model != null)
                                                {
                                                    if (Model.ProjectDetailList != null)
                                                    {
                                                        if (Model.ProjectDetailList.Count > 0)
                                                        {
                                                            <span> @Model.ProjectDetailList.FirstOrDefault().Notes </span>
                                                        }
                                                    }
                                                }
                                            }
                                        </span>
                                    </td>

                                </tr>
                            </tbody>
                        </table>
                    </div>

                    @{
                        int[] arrBlockDevice = new int[5];
                        if (Model != null && Model.Project != null)
                        {
                            string? blockDevice = Model?.Project?.BlockDevice;
                            if (blockDevice != null && blockDevice.Length == 5)
                            {
                                arrBlockDevice = blockDevice.Select(c => int.Parse(c.ToString())).ToArray();
                            }
                        }
                    }
                    <div class="col-md-3" style="padding-top:0px;padding-bottom:0px;">
                        <div style="width:100%;height:100%;border: 1px solid #f1f1f1;padding-top:10%">
                            <div class="col-md-12" style="margin-top: 25px;text-align:center">
                                <h3>Device Preference</h3>
                            </div>
                            <div class="offset-1 col-md-10" style="margin-top: 25px;">
                                <div class="col-md-1">
                                    <label class="container1_ppd">
                                        <input type="checkbox" id="chkMobile" @(arrBlockDevice[0]==1 ? "checked" : "") onchange="DeviceControl(this.id)"><span class="checkmark_ppd"></span>
                                    </label>
                                </div>
                                <div class="col-md-11" style="text-align: left;margin-left:30px;">
                                    <label>Mobile (non-IOS)</label>
                                </div>
                            </div>
                            <div class="offset-1 col-md-10" style="margin-top: 25px;">
                                <div class="col-md-1">
                                    <label class="container1_ppd">
                                        <input type="checkbox" id="chkIOSMobile" @(arrBlockDevice[1]==1 ? "checked" : "") onchange="DeviceControl(this.id)"><span class="checkmark_ppd"></span>
                                    </label>
                                </div>
                                <div class="col-md-11" style="text-align: left;margin-left:30px;">
                                    <label>IOS Mobile</label>
                                </div>
                            </div>
                            <div class="offset-1 col-md-10" style="margin-top: 25px;">
                                <div class="col-md-1">
                                    <label class="container1_ppd">
                                        <input type="checkbox" id="chkDesktop" @(arrBlockDevice[2]==1 ? "checked" : "") onchange="DeviceControl(this.id)"><span class="checkmark_ppd"></span>
                                    </label>
                                </div>
                                <div class="col-md-11" style="text-align: left;margin-left:30px;">
                                    <label>Desktop/Laptop</label>
                                </div>
                            </div>
                            <div class="offset-1 col-md-10" style="margin-top: 25px;">
                                <div class="col-md-1">
                                    <label class="container1_ppd">
                                        <input type="checkbox" id="chkTablet" @(arrBlockDevice[3]==1 ? "checked" : "") onchange="DeviceControl(this.id)"><span class="checkmark_ppd"></span>
                                    </label>
                                </div>
                                <div class="col-md-11" style="text-align: left;margin-left:30px;">
                                    <label>Tablet</label>
                                </div>
                            </div>
                            <div class="offset-1 col-md-10" style="margin-top: 25px;">
                                <div class="col-md-1">
                                    <label class="container1_ppd">
                                        <input type="checkbox" id="chkIpAddress" @(arrBlockDevice[4]==1 ? "checked" : "") onchange="DeviceControl(this.id)"><span class="checkmark_ppd"></span>
                                    </label>
                                </div>
                                <div class="col-md-11" style="text-align: left;margin-left:30px;">
                                    <label>Duplicate IP</label>
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top: 25px;text-align:center">
                                <p style="color:red">*<i>Please check above to block</i></p>
                            </div>

                        </div>
                    </div>
                    <div class="col-md-3" style="padding-top:0px;padding-bottom:0px;">
                        <div style="width:100%;height:100%;border: 1px solid #f1f1f1;padding:24% 25px 10px 25px;">
                            <div>
                                <input type="button" class="btn btn-primary" style="width:100%" value="Edit" onclick="window.location.href='/VT/Projects/AddProject/@(CommonHelper.EncryptURLHTML(Model?.Project?.ProjectId.ToString()))'" />

                                <input type="button" class="btn btn-primary mt-3" style="width:100%" value="Edit URL" onclick="window.location.href='/VT/Projects/ProjectUrls/@(CommonHelper.EncryptURLHTML(Model?.Project?.ProjectId.ToString()))'" />
                                <input type="button" class="btn btn-primary mt-3" style="width:100%" value="Project Sampling" onclick="window.location.href='/VT/Projects/ProjectMapping/@(CommonHelper.EncryptURLHTML(Model?.Project?.ProjectId.ToString()))'" />
                                <input type="button" class="btn btn-primary mt-3" style="width:100%" value="Download Data" onclick="window.location.href='/VT/Home/ExportToExcelDownloadData?projectId=@Model?.Project?.ProjectId'" />
                                <input type="button" class="btn btn-primary mt-3" style="width:100%" value="Download Response" onclick="window.location.href='/VT/Home/ExportToExcelDownloadResponseData?projectId=@Model?.Project?.ProjectId'" />
                                <input type="button" class="btn btn-primary mt-3" style="width:100%" value="Detailed Report" data-toggle="modal" data-target="#mdlDetailedReport" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title mb-0">Survey Specs</p>
                <div class="row mt-5">
                    <div class="col-md-12">
                        <div class="table-responsive">
                            <table class="table table-striped display expandable-table dataTable no-footer table-bordered" id="tblSurveySpecs">
                                <thead>
                                    <tr>
                                        <th>Country</th>
                                        <th>Quota</th>
                                        <th>CPI</th>
                                        <th>Complete</th>
                                        <th>Percentage</th>
                                        <th>Status</th>
                                        <th>IR</th>
                                        <th>LOI</th>
                                        <th>Flag</th>
                                        <th>Map IP</th>
                                        <th>Pre Screening</th>
                                        <th>Countries Mapped</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        if (Model != null)
                                        {
                                            if (Model.SurveySpecsList != null)
                                            {
                                                if (Model.SurveySpecsList.Count > 0)
                                                {
                                                    foreach (var item in Model.SurveySpecsList)
                                                    {
                                                        <tr>
                                                            <td>@item.Country</td>
                                                            <td>@item.SurveyQuota</td>
                                                            <td>$@item.CPI</td>
                                                            <td>@item.Complete</td>
                                                            <td>@item.CompletePercent</td>
                                                            <td> <a href="javacript:void(0)">@item.StatusName</a></td>
                                                            <td>@item.IRPercent%</td>
                                                            <td>@item.ActLOI</td>
                                                            <td>
                                                                @{
                                                                    if (item != null)
                                                                    {
                                                                        float flagIR = 0;
                                                                        float flagLOI = 0;
                                                                        float EXPIR = item.IRate == null ? 0 : item.IRate ?? default(float);
                                                                        float ACTIR = item.IRPercent == null ? 0 : item.IRPercent ?? default(float);
                                                                        float EXPLOI = item.LOI == null ? 0 : item.LOI ?? default(float);
                                                                        float ACTLOI = item.ActLOI == null ? 0 : item.ActLOI ?? default(float);
                                                                        if (EXPIR > ACTIR)
                                                                        {
                                                                            float drop = EXPIR - ACTIR;
                                                                            float dropPercent = drop * 100 / EXPIR;
                                                                            if (dropPercent > 50)
                                                                            {
                                                                                flagIR = 1;
                                                                            }
                                                                        }
                                                                        if (ACTLOI > EXPLOI)
                                                                        {
                                                                            float drop = ACTLOI - EXPLOI;
                                                                            float dropPercent = drop * 100 / EXPLOI;
                                                                            if (dropPercent > 35)
                                                                            {
                                                                                flagLOI = 1;
                                                                            }
                                                                        }

                                                                        if (flagIR > 0 && flagLOI > 0)
                                                                        {
                                                                            <span id="spnflag" class="fa fa-flag color_red tooltip1"><span style="font-size:12px;" id="spntooltipir" class="tooltiptext1 toolti_cust color_amber_b">IR drop by 50%.LOI raised by 35%</span></span>
                                                                        }
                                                                        else if (flagIR > 0)
                                                                        {
                                                                            <span id="spnflag" class="fa fa-flag color_blue tooltip1"><span style="font-size:12px;" id="spntooltipir" class="tooltiptext1 toolti_cust color_amber_b">IR drop by 50%</span></span>
                                                                        }
                                                                        else if (flagLOI > 0)
                                                                        {
                                                                            <span id="spnflag" class="fa fa-flag color_yellow tooltip1"><span style="font-size:12px;" id="spntooltipir" class="tooltiptext1 toolti_cust color_amber_b">LOI raised by 35%</span></span>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span id="spnflag" class="fa fa-flag color_red tooltip1 d-none"><span style="font-size:12px;" id="spntooltipir" class="tooltiptext1 toolti_cust color_amber_b"></span></span>
                                                                        }
                                                                    }
                                                                }
                                                            </td>
                                                            <td><input type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#MapIPModal" value="Map IP" onclick="ShowCountryModal(@item?.PUID)"> </td>
                                                            <td><input type="button" class="btn btn-primary btn-sm" value="Pre Screening"> </td>
                                                            <td data-itemid="@item?.PUID"></td>
                                                        </tr>
                                                    }
                                                }
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="MapIPModal" tabindex="-1" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style="display:none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="countryModalLabel">Select Country/Countries</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"><i class="fa fa-close"></i></button>
            </div>
            <div class="modal-body">
                <div class="form-horizontal" role="form" style="padding-right: 15px; padding-left: 15px">
                    <div class="form-group">
                        <input type="hidden" id="hdnMapCountry1" value="">
                    </div>
                    <div class="form-group">
                        <label class="control-label mb-10">Select Country/Countries</label>
                       
                        <select class="form-control" id="mulddlCountries" multiple="multiple">
                            
                        </select>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="SaveSelectedCountries()">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title mb-0">Country Details</p>
                <div class="row mt-5">
                    <div class="col-md-12">
                        <div class="table-responsive">
                            <table class="table table-striped display expandable-table dataTable no-footer table-bordered">
                                <thead>
                                    <tr>
                                        <th>Country</th>
                                        <th>Total</th>
                                        <th>Complete</th>
                                        <th>Terminate</th>
                                        <th>OverQuota</th>
                                        <th>Security Term</th>
                                        <th>Fraud Error</th>
                                        <th>Incomplete</th>
                                        <th>Cancelled</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        if (Model != null)
                                        {
                                            if (Model.CountryDetailsList != null)
                                            {
                                                if (Model.CountryDetailsList.Count > 0)
                                                {
                                                    foreach (var item in Model.CountryDetailsList)
                                                    {
                                                        <tr>
                                                            <td>@item.Country</td>
                                                            <td>@item.Total</td>
                                                            <td>@item.Complete</td>
                                                            <td>@item.Terminate</td>
                                                            <td>@item.Overquota</td>
                                                            <td>@item.Sec_Term</td>
                                                            <td>@item.F_Error</td>
                                                            <td>@item.Incomplete</td>
                                                            <td>@item.Cancelled</td>

                                                        </tr>
                                                    }
                                                }
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title mb-0">
                    Supplier Details
                </p>
                <div class="row mt-5">
                    <div class="col-md-12">
                        <div class="table-responsive">
                            <table class="table table-striped display expandable-table dataTable no-footer table-bordered">
                                <thead>
                                    <tr>
                                        <th>COUNTRY</th>
                                        <th>SUPPLIER NAME</th>
                                        <th>CPI</th>
                                        <th>QUOTA</th>
                                        <th>TOTAL</th>
                                        <th>COMPLETE</th>
                                        <th>TERMINATE</th>
                                        <th>OVERQUOTA</th>
                                        <th>SECURITY TERM</th>
                                        <th>FRAUD ERROR</th>
                                        <th>INCOMPLETE</th>
                                        <th>IR(IN %)</th>
                                        <th>LOI</th>
                                        <th>BLOCK</th>
                                        <th>PRESCREENING</th>
                                        <th>EDIT</th>
                                        <th>TRACKING TYPE</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        if (Model != null)
                                        {
                                            if (Model.SupplierDetailsList != null)
                                            {
                                                if (Model.SupplierDetailsList.Count > 0)
                                                {
                                                    foreach (var item in Model.SupplierDetailsList)
                                                    {
                                                        <tr>
                                                            <td>@item.Country</td>
                                                            <td>@item.Name</td>
                                                            <td>$@item.CPI</td>
                                                            <td>@item.Quota</td>
                                                            <td>@item.Total</td>
                                                            <td>@item.Complete</td>
                                                            <td>@item.Terminate</td>
                                                            <td>@item.OverQuota</td>
                                                            <td>@item.SecurityTerm</td>
                                                            <td>@item.FraudError</td>
                                                            <td>@item.Incomplete</td>
                                                            <td>@item.IR%</td>
                                                            <td>@item.LOI</td>
                                                            <td><input type="checkbox" id="@item.Id" onchange="chkchecked(this)" value="@item.Block" data-project-id="@item.Id" @(item.Block.HasValue && !item.Block.Value ? "" : "checked") /></td>
                                                            <td><input type="checkbox" value="@item.PreScreening" id="@item.Id" onchange="Prescreeningchecked(this)" value="@item.PreScreening" data-project-id="@item.Id" @(item.PreScreening.HasValue && !item.PreScreening.Value ? "" : "checked") /></td>
                                                            <td><input type="button" class="btn btn-info btn-sm" value="Edit" id="@item.Id" onclick="Edit(this.id)" /></td>
                                                            <td>
                                                                <input type="button" class="btn btn-primary btn-sm" id="@item.Id"
                                                                       value="@(item.TrackingType == true ? "Pixel Tracking" : "Redirects")"
                                                                       data-toggle="modal" data-target="#myModalHorizontal" onclick="redirectclick(this.id)" />
                                                            </td>

                                                        </tr>
                                                    }
                                                }
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade in" id="modal_cpi" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display:none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"><i class="fa fa-close"></i></button>
                <h4 class="modal-title" id="modal_cpi">Edit</h4>
            </div>
            <!-- Modal Body -->
            <div class="modal-body">
                <div class="form-horizontal" role="form">
                    <div class="form-group">
                        <div class="col-sm-10">
                            <input type="hidden" id="hiddenCPIID" value="75648">
                            <label class="" id="lblPname">1046534</label>
                            <br>
                            <label class="" id="lnlPnumber">NXT214506</label>
                            <br>
                            <label class="" id="lblCountryName">United States of America</label>
                            <br>
                            <label class="" id="lblSupplierName">VEND1</label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="txtQuota">RESPONDENT QUOTA</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="txtQuota" placeholder="RESPONDENT QUOTA">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="txtCPI">CPI</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="txtCPI" placeholder="CPI">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="txtNOTES">NOTES</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="txtNOTES" placeholder="NOTES">
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer">
                <input type="button" class="btn btn-default" data-dismiss="modal" value="Close">
                <input type="button" class="btn btn-primary" onclick="savecpichanges()" value="Save changes">
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title mb-0">
                    Survey Links
                </p>
                <div class="row mt-5">
                    <div class="col-md-12">
                        <div class="table-responsive">
                            <table class="table table-striped display expandable-table dataTable no-footer table-bordered">
                                <thead>
                                    <tr>
                                        <th>COUNTRY</th>
                                        <th>SUPPLIER NAME</th>
                                        <th>CLIENT SURVEY LINK</th>
                                        <th>SUPPLIER LINK</th>
                                        <th>TEST</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        if (Model != null)
                                        {
                                            if (Model.SurveyLinksList != null)
                                            {
                                                if (Model.SurveyLinksList.Count > 0)
                                                {
                                                    foreach (var item in Model.SurveyLinksList)
                                                    {
                                                        <tr>
                                                            <td>@item.Country</td>
                                                            <td>@item.Suppliers</td>
                                                            <td>$@item.OLink</td>
                                                            <td>@item.MLink</td>
                                                            <td><input type="button" class="btn btn-info btn-sm" value="Test" onclick="testyourlink('@Html.Raw(HttpUtility.JavaScriptStringEncode(item.MLink))')" /></td>

                                                        </tr>
                                                    }
                                                }
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- #region Modals -->

<div class="modals">
    <div class="modal fade" id="mdlChangeStatus" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Change Projects Status</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <select class="form-control" name="Status">
                                <option value="1">Closed</option>
                                <option value="2">Live</option>
                                <option value="3">On Hold</option>
                                <option value="4">Cancelled</option>
                                <option value="5">Awarded</option>
                                <option value="6">Invoiced</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" value="0" name="ProjectId" />
                    <button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary btn-sm" onclick="UpdateStatus()">Update Status</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modals">
    <div class="modal fade" id="mdlDetailedReport" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Detailed Report</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <label>Start Date</label>
                            <input type="date" class="form-control" id="StartReportDate" />
                            <label>End Date</label>
                            <input type="date" class="form-control" id="EndReportDate" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" value="0" name="ProjectId" />
                    <button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary btn-sm" data-dismiss="modal" onclick="DownloadDetailedReport(@Model?.Project.ProjectId)">Download Report</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myModalHorizontal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Tracking Type</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <form id="trackingForm" class="form-horizontal">

                    <input type="hidden" id="hiddenID" />

                    <!-- Tracking Type -->
                    <div class="form-group">
                        <label for="ddlTrackingType" class="control-label mb-2">Tracking Type</label>
                        <select id="ddlTrackingType" class="form-control">
                            <option value="0">Redirects</option>
                            @* <option value="1">Pixel</option> *@
                        </select>
                    </div>

                    <!-- Redirects Section -->
                    <div class="row" id="Section_Redirects">
                        <div class="col-12">
                            <div class="form-group">
                                <label>Completes</label>
                                <input type="text" id="txtComplete" class="form-control" placeholder="Enter your status complete URL here" />
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label>Terminate</label>
                                <input type="text" id="txtTerminate" class="form-control" placeholder="Enter your Terminate URL" />
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label>Overquota</label>
                                <input type="text" id="txtOverquota" class="form-control" placeholder="Enter your Overquota URL" />
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label>Security Term</label>
                                <input type="text" id="txtSecurity" class="form-control" placeholder="Enter your Security Term URL" />
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label>Fraud Error</label>
                                <input type="text" id="txtFraud" class="form-control" placeholder="Enter your Fraud Error URL" />
                            </div>
                        </div>
                    </div>

                </form>
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="btnsavetrackingtype" class="btn btn-primary">Save changes</button>
            </div>

        </div>
    </div>
</div>


<input type="hidden" name="gProjectId" value="@Model?.Project?.ProjectId" />

<!-- #endregion -->
@section scripts {


    <script src="~/customJS/Home/Dashboard.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            MappedCountriesView();
        });

        function getProjectTable() {
            BlockUI();
            //getProjectTablePartialView().then((d) => {
            //    UnblockUI();
            //});
        }

        function DownloadDetailedReport(projectId) {
            let startReportDate = $("#StartReportDate").val();
            let endReportDate = $("#EndReportDate").val();
            $.ajax({
                url: `/VT/Home/ExportToExcelDetailedDateWiseReport`, // Replace with your controller's name
                type: 'GET',
                data: { projectId: projectId, startReportDate: startReportDate, endReportDate: endReportDate },
                xhrFields: {
                    responseType: 'blob' // Important for downloading files
                },
                success: function (data, status, xhr) {
                    // Get the filename from the Content-Disposition header
                    let disposition = xhr.getResponseHeader('Content-Disposition');
                    let fileName = 'Report.xlsx'; // Default filename
                    if (disposition && disposition.indexOf('attachment') !== -1) {
                        let matches = /filename="([^"]*)"/.exec(disposition);
                        if (matches && matches[1]) fileName = matches[1];
                    }

                    // Create a download link and trigger it
                    let url = window.URL.createObjectURL(data);
                    let a = document.createElement('a');
                    a.href = url;
                    a.download = fileName;
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                    a.remove();
                },
                error: function (xhr, status, error) {
                    alert('Error downloading the file: ' + error);
                }
            });
        }

        function DeviceControl(id) {
            debugger
            var reqmobile = 0;
            var reqIOS = 0;
            var reqDesktop = 0;
            var reqtablet = 0;
            var reqIP = 0;
            if ($('#chkMobile').is(':checked')) {
                reqmobile = 1;
            }
            else {
                reqmobile = 0;
            }
            if ($('#chkIOSMobile').is(':checked')) {
                reqIOS = 1;
            }
            else {
                reqIOS = 0;
            }
            if ($('#chkDesktop').is(':checked')) {
                reqDesktop = 1
            }
            else {
                reqDesktop = 0;
            }
            if ($('#chkTablet').is(':checked')) {
                reqtablet = 1
            }
            else {
                reqtablet = 0;
            }

            if ($('#chkIpAddress').is(':checked')) {
                reqIP = 1

            }
            else {
                reqIP = 0;
            }
            var req = reqmobile + '' + reqIOS + '' + reqDesktop + '' + reqtablet + '' + reqIP;
            var model = {};
            model.BlockDevice = req;
            model.ProjectId = $("[name='gProjectId']").val();
            BlockUI();
            $.ajax({
                type: "POST",
                contentType: "application/json",
                url: '/VT/Home/DeviceControl',
                data: JSON.stringify(model),
                success: function (data) {
                    UnblockUI();
                    Swal.fire({ title: 'Success!', text: "Device Control Updated", icon: 'success', confirmButtonText: 'OK' }).then((result) => {
                        if (result.isConfirmed) {

                        }
                    });
                },
                error: function (error) {
                    UnblockUI();
                    $erroralert("Error!", error.responseText);
                }
            });
            // alert(req);

        }
        function chkchecked(checkbox) {
            try {
                const isChecked = checkbox.checked;
                const itemId = checkbox.dataset.projectId;
                const status = isChecked ? 'Check' : 'Uncheck';

                const model = {
                    ProjectId: itemId,
                    Action: status
                };

                BlockUI();

                $.ajax({
                    type: "POST",
                    url: '/VT/Home/UpdateStatus',
                    contentType: "application/json",
                    data: JSON.stringify(model),
                    dataType: "json"
                })
                .done(function (data) {
                    UnblockUI();

                    const message = data?.value?.message;

                    if (!message) {
                        Swal.fire('Unknown Response', 'No message returned from server.', 'warning');
                        return;
                    }

                    if (message === "Overquota") {
                        $(checkbox).prop('checked', true);
                        Swal.fire('Quota Exceeded', message, 'warning');
                    } else if (message === "Invalid request") {
                        $(checkbox).prop('checked', !isChecked);
                        Swal.fire('Invalid Request', message, 'error');
                    } else {
                        Swal.fire('Success', message, 'success');
                    }
                })
                .fail(function (xhr, status, error) {
                    UnblockUI();
                    $(checkbox).prop('checked', !isChecked);
                    Swal.fire('Error', 'Something went wrong: ' + error, 'error');
                });
            } catch (e) {
                Swal.fire('Client Error', e.message, 'error');
            }
        }

        function Prescreeningchecked(checkbox) {
                 debugger
            try {
                const isChecked = checkbox.checked;
                const itemId = checkbox.dataset.projectId;

                const model = {
                     ProjectId: parseInt(itemId),
                    Prescreening: isChecked ? 1 : 0
                };

                BlockUI();

                $.ajax({
                    type: "POST",
                    url: '/VT/Home/upDatePrescreening',
                    contentType: "application/json",
                    data: JSON.stringify(model),
                    dataType: "json"
                })
                .done(function (data) {
                    UnblockUI();

                    const result = data;
                    const message = result?.RetMessage;

                    if (result?.RetVal === -1) {
                        $(checkbox).prop('checked', !isChecked);
                        Swal.fire('Update Failed', message, 'error');
                    } else {
                        Swal.fire('Success', message, 'success');
                    }
                })
                .fail(function (xhr, status, error) {
                    UnblockUI();
                    $(checkbox).prop('checked', !isChecked);
                    Swal.fire('Error', 'Something went wrong: ' + error, 'error');
                });
            } catch (e) {
                Swal.fire('Client Error', e.message, 'error');
            }
        }

        function showNotification(message, type) {
            // Replace with your preferred notification library (Toastr, SweetAlert, etc.)
            alert(`${type}: ${message}`);
        }
        function ShowCountryModal(ID) {
            debugger
            $("#MapIPModal").css("display", "block");
            $('#hdnMapCountry1').val(ID);
            if ($("#mulddlCountries option").length === 0) {
                LoadCountries();
            }
        }


        

         function LoadCountries() {
            
            $.ajax({
                type: "POST",
                url: '/VT/Home/GetCountries',
                success: function (data) {
                    if (data.length > 0) {
                        let optionsHtml = "";

                        for (var i = 0; i < data.length; i++) {
                            optionsHtml += `<option value="${data[i].countryId}">${data[i].country}</option>`;
                        }

                        // Add options dynamically
                        $("#mulddlCountries").html(optionsHtml);

                        // Initialize Select2
                        $("#mulddlCountries").select2({
                            placeholder: "Select Country/Countries", // Placeholder text
                            allowClear: true, // Allow clearing selections
                            width: '100%' // Set width to 100%
                        });

                    } else {
                        console.warn("No countries returned from server.");
                    }
                },
                error: function (result) {
                    console.error("Error fetching countries:", result);
                }
            });
        }

       function SaveSelectedCountries() {
       
    const selectedCountries = $("#mulddlCountries").val(); 
    
            if (!selectedCountries || selectedCountries.length === 0) {
                alert("Please select at least one country."); 
                return; 
            }
    $.ajax({
        type: "POST",
        url: '/VT/Home/SaveMapIP', 
        contentType: "application/json", 
        data: JSON.stringify({ 
            id: $("#hdnMapCountry1").val(), 
            countries: selectedCountries 
        }),
        success: function (response) {
            console.log("Countries saved successfully:", response);

                    Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Countries saved successfully!',
                confirmButtonColor: '#3085d6'
            }).then(() => {
                $('#MapIPModal').modal('hide');
                MappedCountriesView();
            });
        },

        error: function (error) {
            console.error("Error saving countries:", error);

            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Error saving countries. Please try again.',
                confirmButtonColor: '#d33'
            });
        }
    });
}

        
        $('#MapIPModal').on('shown.bs.modal', function () {
            LoadCountries();
        });
       

        function mgrCountryMapping(id) {
            id = id.split('btn')[1];
            $('#hdnMapCountry1').val(id);
            $('#mulddlCountries').dropdown('clear');

        }
        function MappedCountriesView() {
            //debugger
            $('#tblSurveySpecs').find('tbody').find('tr').each(function () {
                var row = $(this);
                var id = row.find('td[data-itemid]').data('itemid'); 
                var rowcol = '';

                if (id) {
                    GetMappedCountries(id).done(function (data) {
                        if (data.value.length > 0) {
                            data.value.forEach(function (item) {
                                rowcol += '<label class="B_grnd" style="display: inline-block!important; color: black">' +
                                    item.country +
                                    '<i class="delete icon" id="' + item.Id + '_' + id + '" onclick="deleteMappedCountry(\'' + item.id + '\', \'' + id + '\')"></i>' +
                                    '</label>';
                            });
                        }
                       
                        row.find('td:last').html(rowcol);
                    }).fail(function (error) {
                        console.error("Error fetching mapped countries: ", error);
                    });
                }
            });
        }

        function GetMappedCountries(id) {
            return $.ajax({
                type: "POST",
                url: '/VT/Home/GetMappedCountries',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ ProUrlID: id }),
                dataType: "json"
            });
        }

               function deleteMappedCountry(countryId, projectUrlId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This country will be unmapped from the project.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#aaa',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: '/VT/Home/DeleteMappingCountries',
                        data: JSON.stringify({ ProjectURLID: projectUrlId, CountryID: countryId }),
                        contentType: "application/json",
                        dataType: "json",
                        success: function (response) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted!',
                                text: 'Mapping deleted successfully.',
                                confirmButtonColor: '#3085d6'
                            });
                            MappedCountriesView();
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Failed to delete mapping. Please try again.',
                                confirmButtonColor: '#d33'
                            });
                            console.error("Error deleting mapped country: ", error);
                        }
                    });
                }
            });
        }

       function Edit(id) {
          debugger
          const model = {
            Action: id,
            };
         $.ajax({
        type: "POST",
       
            url: '/VT/Home/GetProjectsDetailsbyid',
           
        data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
        cache: false,
        dataType: "json",
                success: function (response) {
                debugger
           
     const data = response.value;

    $('#hiddenCPIID').val(data.id);
            $('#txtQuota').val(data.respondants);
            $('#txtCPI').val(data.cpi);              
    $('#txtNOTES').val(data.notes);
    $('#lblPname').text(data.projectName);
    $('#lblSupplierName').text(data.supplier);
    $('#lblCountryName').text(data.country);
    $('#lnlPnumber').text(data.pid);      

    $('#modal_cpi').modal('show'); 
        },
        error: function (result) {
            (result.statusText);
        }
    });
}

        function savecpichanges() {
            var formdata = getdata('CPI');
            debugger
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                        url: '/VT/Home/UpdatepromappingCPI',
                data: JSON.stringify({ ProjectId: formdata.id, quota: formdata.quota, cpi: formdata.cpi, notes: formdata.notes }),
                cache: false,
                dataType: "json",
                success: function (data) {
                    debugger
                                   if (data.value.retVal === 1) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                            text: data.value.retMessage || "CPI Mapping updated successfully.",
                    confirmButtonColor: '#3085d6'
                }).then(() => {
                    $('#modal_cpi .close').click();
                    // loadSupplierDetails(querystringid); 
                    window.location.reload();
                });
            } else if (data.value === 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: "Please try again.",
                    confirmButtonColor: '#d33'
                });
            } else {
                Swal.fire({
                    icon: 'warning',
                    title: 'Unexpected Response',
                    text: "Please contact the administrator.",
                    confirmButtonColor: '#f6c23e'
                });
            }
        },
                error: function (result) {
                    //
                    (result.d);
                }
            });
        }

        function getdata(prefix) {
            return {
                id: $('#hiddenCPIID').val(),
                quota: $('#txtQuota').val(),
                cpi: $('#txtCPI').val(),
                notes: $('#txtNOTES').val()
            };
        }

                function redirectclick(id) {
                    debugger
            $('#ddlTrackingType').val(0);
           // checkTrackingtype();
             getredirectdata(id);
            //  $('#txtcomplete').val(id.substring(3));
        }

        //         function trackingtype() {
        //             debugger
        //     $('#Section_Pixel').hide();
        //     $('#ddlTrackingType').change(function () {
        //         checkTrackingtype();
        //     });
        // }
        // function checkTrackingtype() {
        //     if ($('#ddlTrackingType').val() == 0) {
        //         $('#Section_Redirects').slideDown();
        //         $('#Section_Pixel').slideUp();
        //     }
        //     else if ($('#ddlTrackingType').val() == 1) {
        //         $('#Section_Redirects').slideUp();
        //         $('#Section_Pixel').slideDown();
        //     }
        // }

        // function getredirectdata(id) {
        //                      debugger
        //           const model = {
        //             Action: id,
        //             };
        //          $.ajax({
        //         type: "POST",

        //             url: '/VT/Home/GetProjectsDetailsbyid',

        //         data: JSON.stringify(model),
        //                 contentType: "application/json; charset=utf-8",
        //         cache: false,
        //         dataType: "json",
        //         success: function (data) {
        //              const v = data.value;
        //              console.log(v);
        //             $('#ddlTrackingType').val(data.d[0].TrackingType);
        //             if ($('#ddlTrackingType').val() == 0) {

        //                 $('#Section_Redirects').slideDown();
        //                 $('#Section_Pixel').slideUp();
        //             }

        //             else if ($('#ddlTrackingType').val() == 1) {

        //                 $('#Section_Redirects').slideUp();
        //                 $('#Section_Pixel').slideDown();
        //             }
        //             hiddenID
        //             $('#hiddenID').val(id);
        //             $('#txtcomplete').val(data.d[0].Completes);
        //             $('#txtTerminate').val(data.d[0].Terminate);
        //             $('#txtOverquota').val(data.d[0].Overquota);
        //             $('#txtSecurity').val(data.d[0].Security);
        //             $('#txtFraud').val(data.d[0].Fraud);
        //             $('#txtSuccess').val(data.d[0].SUCCESS);
        //             $('#txtDefault').val(data.d[0].DEFAULT);
        //             $('#txtFailure').val(data.d[0].FAILURE);
        //             $('#ddlQuality').val(data.d[0].QUALITY_TERMINATION);
        //             $('#ddlOverquota').val(data.d[0].OVER_QUOTA);

        //         },
        //         error: function (result) {
        //             alert(result.statusText);
        //         }
        //     });
        // }

                function getredirectdata(id) {
            const model = { Action: id };

            $.ajax({
                type: "POST",
                 url: '/VT/Home/GetProjectsDetailsbyid',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                cache: false,
                dataType: "json",
                success: function (data) {
                            const v = data.value;
                             console.log(v);

                                    if (!v) {
                        alert("No data found for this ID.");
                        return;
                    }

                    // Tracking type
                    // $('#ddlTrackingType').val(project.TrackingType);

                    // if (project.TrackingType == 0) {
                    //     $('#Section_Redirects').slideDown();
                    //     $('#Section_Pixel').slideUp();
                    // } else if (project.TrackingType == 1) {
                    //     $('#Section_Redirects').slideUp();
                    //     $('#Section_Pixel').slideDown();
                    // }

                            $('#hiddenID').val(id);

                    // Redirect section values
                    $('#txtComplete').val(v.completes);
                    $('#txtTerminate').val(v.terminate);
                    $('#txtOverquota').val(v.overquota);
                    $('#txtSecurity').val(v.security);
                    $('#txtFraud').val(v.fraud);

                    // Pixel section values
                    // $('#txtSuccess').val(project.SUCCESS);
                    // $('#txtDefault').val(project.DEFAULT);
                    // $('#txtFailure').val(project.FAILURE);
                    // $('#txtQualityTermination').val(project.QUALITY_TERMINATION);
                    // $('#txtOverQuotaPixel').val(project.OVER_QUOTA);
                },
                error: function (xhr) {
                    alert("Error: " + xhr.statusText);
                }
            });
        }
                      $('#btnsavetrackingtype').click(function () {
                 var object = {
                ID: $('#hiddenID').val(),
                TrackingType: $('#ddlTrackingType').val(),
                Completes: $('#txtComplete').val(),
                Terminate: $('#txtTerminate').val(),
                Overquota: $('#txtOverquota').val(),
                Security: $('#txtSecurity').val(),
                Fraud: $('#txtFraud').val(),
                SUCCESS: $('#txtSuccess').val(),
                DEFAULT: $('#txtDefault').val(),
                FAILURE: $('#txtFailure').val(),
                QUALITY_TERMINATION: $('#txtQualityTermination').val(),
                OVER_QUOTA: $('#txtOverQuotaPixel').val()
            };

            savetrackings(object);
        });


                    function savetrackings(formdata) {
           
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '/VT/Home/UpdateRedirectsInProMap',
                data: JSON.stringify(formdata),
                cache: false,
                dataType: "json",
                success: function (data) {
                    debugger
                                    if (data.value.retVal === 1) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: data.retMessage,
                            timer: 2000,
                            showConfirmButton: false
                        });

                        // Close modal after slight delay to let user see message
                        setTimeout(() => {
                            $('#myModalHorizontal .close').click();
                        }, 2000);
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.retMessage || "Please try again"
                        });
                    }
                },
                error: function (xhr) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Server Error',
                        text: xhr.statusText || "An unexpected error occurred."
                    });
                }
            });
        }


                
    </script>
}
